plone.formwidget.contenttree to-do
==================================

This is Limi's mockup about selection widgets. To achieve this, we should:

 1) Change plone.formwidget.autocomplete so that instead of using ;-delimited
    tokens in the text field, it builds a list of radio buttons/check boxes.
    This should be easy enough with custom result() handler in the jQuery
    Autocomplete widget. The widget can act in single-select mode, even for
    multi-select fields.
    
 2) Make plone.formwidget.contenttree extend plone.formwidget.autocomplete.
    The searchable source for the content tree widget should work with the
    autocomplete widget already.
    
 3) Add a browse button, and pop up a box with the tree widget.
 
 4) Make selection callback do nothing except store value
 
 5) Make Add and Close buttons act as below.
 
 6) Ensure the extract() method in both widgets works. It is likely that we
    can make do with the one from z3c.formwidget.query, since we're now just
    talking about radio buttons.

The design:
-----------

- Supports search and - optionally - browsing
- Supports client-side or server-side data sources
- Both for values selection (user/group/tags) and content selection
- Multi-select and single select

Tags/users/groups use case (aka.autocomplete - flat namespace):

Tags: [x] Plone
      [x] Zope
      [x] Python
     [Search...       ]
      | autocomplete | 
      | autocomplete | 
      | autocomplete | 
      |______________|


Content selection use case (autocomplete + browse - nested namespace)

Tags: [x] Document 1
      [x] Document 2
      [x] Image 1
     [Search...       ] [Browse...]
      | autocomplete | 
      | autocomplete | 
      | autocomplete | 
      |______________|

Clicking [Browse...] gives you a lightbox-style (ie. not a real window)
pop-up dialog box that resembles a standard file system picker:


 ___________________________________________
| Favorites |_________________[Search...  ]|
| - Folder1 |                              |
| - Folder2 |  Tree selection goes here    |
| - Folder3 |                              |
|           |                              |
|           |               [Add] [Close]  |
|__________________________________________|


Note that it also supports search, since very often people's first instinct
is to browse, and when they can't find it, they look for search.

Other notes:

 - Multiselect is still hard, but for now: if multiselect is supported, the
   buttons are: [Add] and [Close], if it's single-select, they are [Add] and
   [Cancel].
   
 - Adding an item in the multiselect case shows a "Item X added" status 
   message, but doesn't close the window. Adding in the single-select case
   closes the window.